@using System.Collections
@using Payroll.Models
@model List<Employee>
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    Employee Payroll
</div>
<div class="table-responsive">
    @if (Model.Any())
    {
        <table class="table table-striped table-bordered" id="employeeTable">
            <thead>
                <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Gross Annual Pay</th>
                    <th>Net Annual Pay</th>
                    <th>Gross Bi Weekly Pay</th>
                    <th>Net Bi Weekly Pay</th>
                    <th>Number of Dependants</th>
                    <th></th>
                </tr>
            </thead>
            @for (int i = 0; i < Model.Count(); i++)
            {
                <tr id="@Model[i].Id">
                    <td>@Html.DisplayFor(m => m[i].Id)</td>
                    <td>@Html.DisplayFor(m => m[i].FullName)</td>
                    <td>@Html.DisplayFor(m => m[i].GrossAnnualPay)</td>
                    <td>@Html.DisplayFor(m => m[i].NetAnnualPay)</td>
                    <td>@Html.DisplayFor(m => m[i].GrossBiWeeklyPay)</td>
                    <td>@Html.DisplayFor(m => m[i].NetBiWeeklyPay)</td>
                    <td>@Model[i].Dependants.Count()</td>
                    <td>@Html.ActionLink("Edit", "Edit", "Home", new { id = Model[i].Id }, null)</td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>There are currently no employees.</p>
    }
</div>

@Html.ActionLink("New Employee", "CreateEmployee", "Home", new { @class = "btn btn-primary" })

<script type="text/javascript">
    var employeeTable;
    $(document).ready(function () {
        employeeTable = $("#employeeTable").DataTable({
            "searching": false,
            "columnDefs": [
                {
                    "type": "num-fmt",
                    "targets": [2, 3, 4, 5]
                },
                {
                    "targets": [0],
                    "visible":false
                }
            ]
        });
    });

    $(function () {
        var emp = $.connection.employeeHub;

        $.connection.hub.start();

        emp.client.updateAllEmployees = function (empList) {
            employeeTable.rows().remove();
            $.each(empList, function (i, emp) {
                employeeTable.row.add([
                    emp.Id,
                    emp.FullName,
                    emp.GrossAnnualPay,
                    emp.NetAnnualPay,
                    emp.GrossBiWeeklyPay,
                    emp.NetBiWeeklyPay,
                    (emp.Dependants).length,
                    "put link here"
                ]);
            });
            employeeTable.draw();
        };
    });
</script>